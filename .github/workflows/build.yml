name: Build

on: [push, pull_request]

# as recommended by: https://github.com/actions/checkout/issues/1590
env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:

  # === Windows ===
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=MinSizeRel ..
          cmake --build . --config MinSizeRel --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-windows"
          path: |
            build/bin/tic80.exe

  # === Ubuntu ===
  linux-gcc12-glibc235:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install gcc-12 g++-12 libglu1-mesa-dev libasound2-dev libpulse-dev libaudio-dev libsamplerate0-dev libcurl4-openssl-dev -y
          sudo ln -s -f /usr/bin/gcc-12 /usr/bin/gcc
          sudo ln -s -f /usr/bin/g++-12 /usr/bin/g++
          
      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-linux"
          path: |
            build/bin/tic80

  # === MacOS 13 ===
  macos:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: brew uninstall --ignore-dependencies libidn2

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-macos"
          path: |
            build/bin/tic80

  # === MacOS 14 / arm64 ===
  macos-arm64:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: brew uninstall --ignore-dependencies libidn2

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-macos-arm64"
          path: |
            build/bin/tic80

  # === HTML ===
  html:
    runs-on: ubuntu-latest

    steps:
      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build all
        run: |
          cd build
          emcmake cmake -DCMAKE_BUILD_TYPE=MinSizeRel ..
          cmake --build . --parallel
          cp html/index.html bin/index.html

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-html"
          path: |
            build/bin/*
